<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:c="http://www.springframework.org/schema/c"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd" default-autowire="byName">
  	<!--<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true" />
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref ="redisTemplate"/>
	<cache:annotation-driven cache-manager="redisCacheManager"/>  
	 <bean id="connectionFactory"   
        class='org.springframework.data.redis.connection.jedis.JedisConnectionFactory'>  
        <property name="hostName" value="${redis.server}"/>  
        <property name="port" value="${redis.port}"/>  
        <property name="poolConfig" ref="poolConfig"/>  
        <property name="usePool" value="true"/>  
    </bean>    
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref ="jedisConnectionFactory"/>  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxActive" value="${redis.maxActive}"></property>  
        <property name="maxIdle" value="${redis.maxIdle}"></property>  
        <property name="maxWait" value="${redis.maxWait}"></property>  
        <property name="testOnBorrow" value="false"></property>  
        <property name="testOnReturn" value="false"></property>  
    </bean>  
    <bean id="jedisConnectionFactory"   
        class='org.springframework.data.redis.connection.jedis.JedisConnectionFactory'>  
        <property name="hostName" value="${redis.server}"/>  
        <property name="port" value="${redis.port}"/>  
        <property name="poolConfig" ref="poolConfig"/>  
        <property name="usePool" value="true"/>  
    </bean>       -->
   
    <!-- Redis 配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
        <property name="minIdle" value="${redis.pool.minIdle}"></property>
    </bean>
    <bean id="sentinelConfiguration"
          class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="${redis.pool.sentinelname}"></property>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${sentinel1.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${sentinel1.port}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${sentinel1.ip}"></constructor-arg>
                    <constructor-arg name="port" value="${sentinel1.port}"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <!-- Jedis ConnectionFactory连接配置 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="password" value="${redis.pass}"></property>
        <property name="poolConfig" > <ref bean="jedisPoolConfig"/></property>
        <property name="database" value="${redis.pool.database}"/>
        <constructor-arg name="sentinelConfig" ref="sentinelConfiguration"></constructor-arg>
    </bean>
    <!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>
</beans>